[["index.html", "Data Cleaning and Visualisation using R About", " Data Cleaning and Visualisation using R Dr. Ioana Macoveciuc About Welcome to SOST70023 Data Cleaning and Visualisation using R! This notebook will host the materials for all practical exercises for this course unit. "],["how-to-use-this-notebook.html", "How to use this notebook", " How to use this notebook Describe how to use each week and how to use the menu (maybe add a picture?) "],["introducing-statistical-programming-with-r-and-rstudio.html", " 1 Introducing Statistical Programming with R and RStudio 1.1 Performing Calculations with Vectors 1.2 Exploring Vectors 1.3 Importing and Exporting Data 1.4 Bonus Task: Data on GitHub", " 1 Introducing Statistical Programming with R and RStudio Learning Outcomes: Employ the basics of the R language to run simple lines of code; Import different types of data files. Export data in different formats. In this section, you will practice how to use the following functions: Function Description Package c() concatenate function base R class() finding class of object base R length() finding length of object base R View() viewing data objects spreadsheet-style base R read_spss() reading SPSS data files haven read_dta() reading Stata data files haven read.csv() reading .csv files base R readRDS() reading .RDS files base R load() loading .RData files base R save() saving multiple files (.Rdata format) base R saveRDS() saving single files (.RDS format) base R write.csv() save a file as .csv file base R WARNING 1: Before proceeding to the exercises, ensure that you create and work in a RStudio project and that you write and save your answers to the exercises in an R script. WARNING 2: To adequately develop your practicals programming skills, it is essential that you attempt all exercises by typing out the code rather than simply copy-pasting the answers. 1.1 Performing Calculations with Vectors 1.1.1 Exercise Create a vector object called num_vct that contains the following values: 70, 8, 50, 100. Print the contents. Code num_vct &lt;- c(70, 8, 50, 100) num_vct ## [1] 70 8 50 100 Multiply this vector by 2. Code num_vct * 2 ## [1] 140 16 100 200 Divide the vector by 10. Code num_vct / 10 ## [1] 7.0 0.8 5.0 10.0 Subtract 5 from the vector. Code num_vct - 5 ## [1] 65 3 45 95 Add 8 to the vector. Code num_vct + 8 ## [1] 78 16 58 108 Create a new numeric vector that contains the following values: 5, 7, 9, 10. Name it num_vct2 and print the contents. Code num_vct2 &lt;- c(5, 7, 9, 10) num_vct2 ## [1] 5 7 9 10 Add num_vct2 to num_vct. Code num_vct2 + num_vct ## [1] 75 15 59 110 Divide num_vct by num_vct2. Code num_vct / num_vct2 ## [1] 14.000000 1.142857 5.555556 10.000000 Multiply num_vct2 by num_vct. Code num_vct2 * num_vct ## [1] 350 56 450 1000 Subtract num_vct from num_vct2. Code num_vct2 - num_vct ## [1] -65 -1 -41 -90 1.1.2 Exercise Create a character vector object that contains the following: I, love, programming, with, R. Name this vector char_vct and print the contents. Code char_vct &lt;- c(&quot;I&quot;, &quot;love&quot;, &quot;programming&quot;, &quot;with&quot;, &quot;R&quot;) char_vct ## [1] &quot;I&quot; &quot;love&quot; &quot;programming&quot; &quot;with&quot; &quot;R&quot; Perform calculations on the character vector. Code char_vct * 2 ## Error in char_vct * 2: non-numeric argument to binary operator What results do you obtain after trying to perform mathematical operations on your character vector? Why ? Note the error message in the console; none of the tasks can be applied to this vector because these are all arithmetic tasks which work only on numeric vectors. 1.2 Exploring Vectors 1.2.1 Exercise Use the class() function to find out what type of objects num_vct and char_vct are. Code class(num_vct) ## [1] &quot;numeric&quot; Code class(char_vct) ## [1] &quot;character&quot; The number of elements in a vector is referred to as the length of the vector. With small vectors such as those you have already created, you can simply count these. Alternatively, the length() function can be used. Use the length() function to obtain the length of the following objects: num_vct, char_vct, num_vct2. Code length(num_vct) ## [1] 4 Code length(char_vct) ## [1] 5 Code length(num_vct2) ## [1] 4 1.2.2 Exercise Create a vector object that contains the following logical and numeric values: TRUE, 6, FALSE, 10, FALSE. Name it new_vct . Code new_vct &lt;- c(TRUE, 6, FALSE, 10, FALSE) Print the contents. Code new_vct ## [1] 1 6 0 10 0 Does the output match the contents you entered when you created the vector? Why? The output does not match the contents. Since vectors cannot contain different data types, R will force (i.e. coerce) all entered values to match, in an attempt to lose as little information as possible. In this case, the logical values are coerced to 1 and 0, corresponding to True and False respectively. This is one of the several reasons for why data cleaning is important before proceeding with data analysis; such coercions can have a significant impact on the accuracy of our data and implicitly, on your interpretation of the data. 1.3 Importing and Exporting Data Throughout the course units of this programme, you will utilise real datasets to develop your data analysis and interpretation skills. In this exercise, you will practice how to download, access, and import data from the UK Data Service in R. You will also have the opportunity to practice how to export data in various formats. Remember to first register with the UK Data Service. Guidance on how to do this can be found in the Section 1 learning materials on Blackboard. Navigate to the British Social Attitudes Survey (2019) webpage on the UK Data Service website (https://beta.ukdataservice.ac.uk/datacatalogue/studies/study?id=8850#!/access-data) Scroll down to the end of the webpage and download the dataset in both SPSS and STATA formats in your R project working directory. To access the SPSS data file, unzip folder and open the folders in the following sequence: UKDA-8850-spss &gt; spss &gt; spss25. Follow the same approach for accessing the STATA file. Place these two files in your root R project working directory or within a sub-folder in this directory. 1.3.1 Exercise Import the dataset in SPSS format; name this object bsas_spss. Code bsas_spss &lt;- read_spss(&quot;data/bsa2019_poverty_open.sav&quot;) ## Error in read_spss(&quot;data/bsa2019_poverty_open.sav&quot;): could not find function &quot;read_spss&quot; Did the import function work? Why? If you have not loaded the haven package, you will be prompted with the following error in the R console. To load the haven package, type library(haven) in your console first and then run bsas_spss &lt;- read_spss(\"data/bsa2019_poverty_open.sav\"). Also, note that the recommended approach for a ‘clean’ working directory is to place all the data files you plan to use in a separate folder within your working directory. You can name this folder data, for example. If you want to access a data file located in your root working directory, then simply remove the data/ component from the file path. Import the dataset in STATA format; name this object bsas_stata. Code bsas_stata &lt;- read_dta(&quot;data/bsa2019_poverty_open.dta&quot;) How many observations and variables do the bsas_spss and bsas_stata objects have? Are these identical for both objects? There are many different ways to find the number of observations and variables such as looking at the information in the Environment tab. Since both data files are identical, both objects contain an identical number of observations and variables. 1.3.2 Exercise Export both bsas_spss and bsas_stata data objects in .RData format. Code save(bsas_spss, bsas_stata, file = &quot;bsas_objects.RData&quot;) Now export bsas_spss as a single object in .RDS format. Code saveRDS(bsas_spss, &quot;bsas_spss_file.RDS&quot;) Finally, export the bsas_stata object as a .csv file. Code write.csv(bsas_stata, &quot;bsas_stata_file.csv&quot;) 1.3.3 Exercise Import the .csv file you have created and name this object bsas_stata2. View the contents of the bsas_stata2 and bsas_stata objects. What are the differences between the two, if any? Why? Code bsas_stata2 &lt;- read.csv(&quot;bsas_stata_file.csv&quot;) Are there any differences between bsas_stata2 and bsas_stata? If there are, Why? Thebsas_stata objected imported with the haven package has accompanying metadata. When exporting data files with metadata as .csv files, this metadata is lost because this type of format does not support metadata in the same way that files such as SPSS and STATA do. Also, you may note that the bsas_stata2 has 27 rather than 26 variables; by default, the write.csv function will automatically number each row in the data file and therefore, will produce an additional column. Now import the .RDS created and name this object bsas_spss2. Code bsas_spss2 &lt;- readRDS(&quot;bsas_spss_file.RDS&quot;) Finally, load the .Rdata file you created. Code load(&quot;bsas_objects.RData&quot;) 1.4 Bonus Task: Data on GitHub Importing Data from Github Repositories Many different types of data can be imported in R using either base R functions or functions from packages. However, R is not limited to importing ‘hard copy’ files from your machine but also supports direct import of data files located on websites for example. A Github Repository is a cloud-based, online platform that allows programming users to openly share research projects, associated documentation, data files, and comments with other users and/or the public. Explore the Johns Hopkins Whiting School of Engineering COVID-19 Github Repository (https://github.com/CSSEGISandData/COVID-19) Open the csse_covid_19_data folder found at the beginning of the page. Then open the csse_covid_19_time_series folder. Click on time_series_covid19_confirmed_global.csv link. Click on the Raw button on the right hand side of the screen. The webpage will now show you a long series of numbers. This is the ‘data file’ that you need to import. Note that this file is a .csv file. The same base R function you have previously used will also work in this case. To import the data file, create a new object called covid_johnshop. Within the base R .csv function, paste the full data file web link. Do not forget to enclose this link with quotation marks. Code covid_johnshop &lt;- read.csv(&quot;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&quot;) View the contents of this object. Code View(covid_johnshop) Find the class of the object. Code class(covid_johnshop) ## [1] &quot;data.frame&quot; "],["the-structure-of-data-objects.html", " 2 The Structure of Data Objects", " 2 The Structure of Data Objects "],["manipulating-and-tidying-data.html", " 3 Manipulating and Tidying Data", " 3 Manipulating and Tidying Data You can add parts to organize one or more book chapters together. Parts can be inserted at the top of an .Rmd file, before the first-level chapter heading in that same file. Add a numbered part: # (PART) Act one {-} (followed by # A chapter) Add an unnumbered part: # (PART\\*) Act one {-} (followed by # A chapter) Add an appendix as a special kind of un-numbered part: # (APPENDIX) Other stuff {-} (followed by # A chapter). Chapters in an appendix are prepended with letters instead of numbers. "],["reproducible-workflows-with-r-markdown.html", " 4 Reproducible Workflows with R Markdown", " 4 Reproducible Workflows with R Markdown "],["data-visualisation.html", " 5 Data Visualisation", " 5 Data Visualisation "],["working-with-special-data-types-text-data.html", " 6 Working with Special Data Types: Text Data", " 6 Working with Special Data Types: Text Data "],["programming-with-r.html", " 7 Programming with R", " 7 Programming with R "],["practising-data-cleaning-and-visualisation-formative-peer-review-case-study.html", " 8 Practising Data Cleaning and Visualisation: Formative Peer-Review Case Study", " 8 Practising Data Cleaning and Visualisation: Formative Peer-Review Case Study "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
